#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_memorybus_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_memorybus_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_memorybus_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_memorybus_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_memorybus_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_memorybus_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_memorybus_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_memorybus_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_memorybus_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_memorybus_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_memorybus_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_memorybus_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_memorybus_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_memorybus_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_memorybus_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_memorybus_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_memorybus_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_memorybus_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_memorybus_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_memorybus_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_memorybus_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_memorybus_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_memorybus_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_memorybus_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_memorybus_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_memorybus_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_memorybus_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_memorybus_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_memorybus_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_memorybus_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_memorybus_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_memorybus_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_memorybus_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_memorybus_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_memorybus_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_memorybus_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_memorybus_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_memorybus_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_memorybus_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_memorybus_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_memorybus_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_memorybus_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_memorybus_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_memorybus_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_memorybus_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("s_axi_AXILiteS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_axilite_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_axilite_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_axilite_AWADDR", 8, hls_in, -1, "", "", 1),
	Port_Property("s_axi_axilite_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_axilite_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_axilite_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_axilite_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_axilite_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_axilite_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_axilite_ARADDR", 8, hls_in, -1, "", "", 1),
	Port_Property("s_axi_axilite_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_axilite_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_axilite_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_axilite_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_axilite_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_axilite_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_axilite_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "fpga_top";
