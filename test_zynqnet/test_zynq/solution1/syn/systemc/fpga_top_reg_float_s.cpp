// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "fpga_top_reg_float_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fpga_top_reg_float_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fpga_top_reg_float_s::ap_const_logic_0 = sc_dt::Log_0;

fpga_top_reg_float_s::fpga_top_reg_float_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fpga_top_reg_float_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, in_r, "(port)in_r");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
#endif

    }
}

fpga_top_reg_float_s::~fpga_top_reg_float_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void fpga_top_reg_float_s::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_ce.read())) {
        ap_return = in_r.read();
    }
}

}

