// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fpga_top_preloadPixelsAndPrecalcCIoffse (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        y_V_2,
        x_V_3,
        ci_V,
        ch_out_V,
        ci_V_out_din,
        ci_V_out_full_n,
        ci_V_out_write,
        ch_out_V_out_din,
        ch_out_V_out_full_n,
        ch_out_V_out_write,
        line_width,
        ImageCache_ch_in_V,
        ImageCache_width_in_V,
        ImageCache_height_in_V,
        ImageCache_IBRAM_address0,
        ImageCache_IBRAM_ce0,
        ImageCache_IBRAM_q0,
        WeightsCache_ch_out_V,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_pp0_stg0_fsm_0 = 9'b1;
parameter    ap_ST_pp0_stg1_fsm_1 = 9'b10;
parameter    ap_ST_pp0_stg2_fsm_2 = 9'b100;
parameter    ap_ST_pp0_stg3_fsm_3 = 9'b1000;
parameter    ap_ST_pp0_stg4_fsm_4 = 9'b10000;
parameter    ap_ST_pp0_stg5_fsm_5 = 9'b100000;
parameter    ap_ST_pp0_stg6_fsm_6 = 9'b1000000;
parameter    ap_ST_pp0_stg7_fsm_7 = 9'b10000000;
parameter    ap_ST_pp0_stg8_fsm_8 = 9'b100000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv10_3FF = 10'b1111111111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv19_0 = 19'b0000000000000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [8:0] y_V_2;
input  [8:0] x_V_3;
input  [9:0] ci_V;
input  [9:0] ch_out_V;
output  [9:0] ci_V_out_din;
input   ci_V_out_full_n;
output   ci_V_out_write;
output  [9:0] ch_out_V_out_din;
input   ch_out_V_out_full_n;
output   ch_out_V_out_write;
input  [15:0] line_width;
input  [9:0] ImageCache_ch_in_V;
input  [8:0] ImageCache_width_in_V;
input  [8:0] ImageCache_height_in_V;
output  [14:0] ImageCache_IBRAM_address0;
output   ImageCache_IBRAM_ce0;
input  [31:0] ImageCache_IBRAM_q0;
input  [9:0] WeightsCache_ch_out_V;
output  [18:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ci_V_out_write;
reg ch_out_V_out_write;
reg[14:0] ImageCache_IBRAM_address0;
reg ImageCache_IBRAM_ce0;
reg[18:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;
reg[31:0] ap_return_4;
reg[31:0] ap_return_5;
reg[31:0] ap_return_6;
reg[31:0] ap_return_7;
reg[31:0] ap_return_8;
reg[31:0] ap_return_9;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm = 9'b1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_bdd_28;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_sig_cseq_ST_pp0_stg8_fsm_8;
reg    ap_sig_bdd_46;
reg   [8:0] x_V_3_read_reg_871;
reg    ap_sig_bdd_89;
reg  signed [15:0] line_width_load_reg_881;
wire   [15:0] tmp_182_0_i_i_fu_263_p1;
reg   [15:0] tmp_182_0_i_i_reg_888;
wire   [15:0] addr_pixel_offset_V_0_i_i_fu_267_p2;
reg   [15:0] addr_pixel_offset_V_0_i_i_reg_894;
wire   [0:0] slt_fu_281_p2;
reg   [0:0] slt_reg_901;
wire   [0:0] slt1_fu_295_p2;
reg   [0:0] slt1_reg_906;
reg   [0:0] tmp_2_reg_911;
wire   [0:0] ult_fu_315_p2;
reg   [0:0] ult_reg_916;
reg   [0:0] tmp_3_reg_921;
wire   [9:0] x_V_0_2_i_i_fu_329_p2;
reg   [9:0] x_V_0_2_i_i_reg_927;
wire   [0:0] ult1_fu_335_p2;
reg   [0:0] ult1_reg_932;
wire   [1:0] tmp_6_fu_341_p1;
reg   [1:0] tmp_6_reg_937;
wire   [0:0] ult2_fu_345_p2;
reg   [0:0] ult2_reg_942;
reg   [0:0] tmp_7_reg_947;
wire   [1:0] tmp_9_fu_365_p1;
reg   [1:0] tmp_9_reg_953;
wire   [0:0] ult3_fu_369_p2;
reg   [0:0] ult3_reg_958;
wire   [15:0] addr_pixel_offset_V_0_1_i_i_fu_378_p2;
reg   [15:0] addr_pixel_offset_V_0_1_i_i_reg_963;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_1;
reg    ap_sig_bdd_133;
wire   [15:0] grp_fu_239_p2;
reg   [15:0] addr_line_offset_V_0_i_i_reg_975;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_2;
reg    ap_sig_bdd_144;
wire   [15:0] addr_pixel_offset_V_0_2_i_i_fu_394_p2;
reg   [15:0] addr_pixel_offset_V_0_2_i_i_reg_980;
wire   [15:0] tmp_183_0_i_i_fu_407_p1;
reg   [15:0] tmp_183_0_i_i_reg_992;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_3;
reg    ap_sig_bdd_157;
reg    ap_sig_bdd_162;
wire   [15:0] tmp_184_0_i_i_fu_411_p2;
reg   [15:0] tmp_184_0_i_i_reg_998;
wire   [15:0] grp_fu_386_p2;
reg   [15:0] addr_line_offset_V_0_1_i_i_reg_1009;
wire   [0:0] rev_fu_444_p2;
reg   [0:0] rev_reg_1024;
reg    ap_sig_cseq_ST_pp0_stg4_fsm_4;
reg    ap_sig_bdd_183;
wire   [0:0] rev1_fu_449_p2;
reg   [0:0] rev1_reg_1030;
wire   [15:0] tmp_184_1_i_i_fu_497_p2;
reg   [15:0] tmp_184_1_i_i_reg_1041;
wire   [15:0] tmp_184_2_i_i_fu_501_p2;
reg   [15:0] tmp_184_2_i_i_reg_1048;
wire   [31:0] grp_fpga_top_reg_float_s_fu_212_ap_return;
reg   [31:0] buffer_0_write_assign_reg_1055;
reg    ap_sig_cseq_ST_pp0_stg5_fsm_5;
reg    ap_sig_bdd_200;
wire   [0:0] rev2_fu_506_p2;
reg   [0:0] rev2_reg_1060;
wire   [0:0] rev3_fu_548_p2;
reg   [0:0] rev3_reg_1066;
wire   [0:0] tmp_758_i_i_fu_558_p2;
reg   [0:0] tmp_758_i_i_reg_1072;
wire   [18:0] grp_fu_438_p2;
reg   [18:0] ci_times_ch_out_V_reg_1082;
reg   [31:0] buffer_1_write_assign_reg_1087;
reg    ap_sig_cseq_ST_pp0_stg6_fsm_6;
reg    ap_sig_bdd_222;
reg   [31:0] buffer_2_write_assign_reg_1097;
reg    ap_sig_cseq_ST_pp0_stg7_fsm_7;
reg    ap_sig_bdd_233;
wire   [0:0] rev4_fu_599_p2;
reg   [0:0] rev4_reg_1102;
wire   [15:0] addr_V_1_2_i_i_fu_646_p2;
reg   [15:0] addr_V_1_2_i_i_reg_1113;
wire   [15:0] addr_V_2_i_i_fu_650_p2;
reg   [15:0] addr_V_2_i_i_reg_1118;
wire   [0:0] rev5_fu_654_p2;
reg   [0:0] rev5_reg_1123;
wire   [0:0] tmp_780_i_i_fu_664_p2;
reg   [0:0] tmp_780_i_i_reg_1129;
wire   [15:0] addr_V_2_1_i_i_fu_669_p2;
reg   [15:0] addr_V_2_1_i_i_reg_1134;
wire   [15:0] addr_V_2_2_i_i_fu_673_p2;
reg   [15:0] addr_V_2_2_i_i_reg_1139;
reg   [31:0] buffer_3_write_assign_reg_1144;
wire   [0:0] tmp_774_i_i_fu_704_p2;
reg   [0:0] tmp_774_i_i_reg_1149;
wire   [0:0] tmp_785_i_i_fu_712_p2;
reg   [0:0] tmp_785_i_i_reg_1159;
wire   [0:0] tmp_790_i_i_fu_716_p2;
reg   [0:0] tmp_790_i_i_reg_1164;
reg   [31:0] buffer_4_write_assign_reg_1169;
reg   [31:0] buffer_5_write_assign_reg_1179;
reg   [31:0] buffer_6_write_assign_reg_1189;
reg   [31:0] buffer_7_write_assign_reg_1199;
reg    ap_reg_ppiten_pp0_it0_preg = 1'b0;
reg   [31:0] grp_fpga_top_reg_float_s_fu_212_in_r;
reg    grp_fpga_top_reg_float_s_fu_212_ap_ce;
wire   [31:0] px_0_i_i_fu_479_p3;
wire   [31:0] px_0_1_i_i_fu_535_p3;
wire   [31:0] px_0_2_i_i_fu_581_p3;
wire   [31:0] px_1_i_i_fu_628_p3;
wire   [31:0] px_1_1_i_i_fu_695_p3;
wire   [31:0] px_1_2_i_i_fu_733_p3;
wire   [31:0] px_2_i_i_fu_759_p3;
wire   [31:0] px_2_1_i_i_fu_785_p3;
wire   [31:0] px_2_2_i_i_fu_811_p3;
wire   [63:0] tmp_198_0_i_i_fu_421_p1;
wire   [63:0] tmp_198_0_1_i_i_fu_492_p1;
wire   [63:0] tmp_198_0_2_i_i_fu_563_p1;
wire   [63:0] tmp_198_1_i_i_fu_594_p1;
wire   [63:0] tmp_198_1_1_i_i_fu_641_p1;
wire   [63:0] tmp_198_1_2_i_i_fu_708_p1;
wire   [63:0] tmp_198_2_i_i_fu_742_p1;
wire   [63:0] tmp_198_2_1_i_i_fu_768_p1;
wire   [63:0] tmp_198_2_2_i_i_fu_794_p1;
wire   [9:0] y_V_2_cast1_fu_217_p1;
wire   [9:0] y_V_i_i_fu_221_p2;
wire   [1:0] tmp_1_fu_227_p1;
wire   [1:0] grp_fu_239_p1;
wire   [9:0] x_V_3_cast_fu_245_p1;
wire   [9:0] x_V_0_i_i_fu_249_p2;
wire  signed [9:0] addr_pixel_offset_V_0_i_i_fu_267_p0;
wire   [9:0] addr_pixel_offset_V_0_i_i_fu_267_p1;
wire   [9:0] tmp_187_0_cast_i_i_cast_fu_277_p1;
wire   [9:0] tmp_192_0_cast_i_i_cast_fu_291_p1;
wire   [9:0] p_lobit_i_i2_0_i_i_fu_301_p2;
wire   [9:0] y_V_i_i_43_fu_359_p2;
wire   [8:0] addr_pixel_offset_V_0_1_i_i_fu_378_p0;
wire   [9:0] addr_pixel_offset_V_0_1_i_i_fu_378_p1;
wire   [1:0] grp_fu_386_p1;
wire   [9:0] addr_pixel_offset_V_0_2_i_i_fu_394_p0;
wire   [9:0] addr_pixel_offset_V_0_2_i_i_fu_394_p1;
wire   [1:0] grp_fu_402_p1;
wire   [15:0] addr_V_0_i_i_fu_416_p2;
wire   [9:0] grp_fu_438_p0;
wire   [9:0] grp_fu_438_p1;
wire   [0:0] tmp_fu_454_p2;
wire   [0:0] tmp_748_i_i_fu_460_p2;
wire   [10:0] tmp_749_i_i_fu_465_p3;
wire   [0:0] is_padding_pixel_0_i_i_fu_473_p2;
wire   [15:0] addr_V_0_1_i_i_fu_488_p2;
wire   [15:0] grp_fu_402_p2;
wire   [0:0] tmp4_fu_511_p2;
wire   [0:0] tmp_753_i_i_fu_516_p2;
wire   [10:0] tmp_754_i_i_fu_521_p3;
wire   [0:0] is_padding_pixel_0_1_i_i_fu_529_p2;
wire   [0:0] tmp5_fu_553_p2;
wire   [15:0] addr_V_0_2_i_i_fu_544_p2;
wire   [10:0] tmp_759_i_i_fu_568_p3;
wire   [0:0] is_padding_pixel_0_2_i_i_fu_575_p2;
wire   [15:0] addr_V_1_i_i_fu_590_p2;
wire   [0:0] tmp8_fu_604_p2;
wire   [0:0] tmp_764_i_i_fu_609_p2;
wire   [10:0] tmp_765_i_i_fu_614_p3;
wire   [0:0] is_padding_pixel_1_i_i_fu_622_p2;
wire   [15:0] addr_V_1_1_i_i_fu_637_p2;
wire   [0:0] tmp10_fu_659_p2;
wire   [0:0] tmp_769_i_i_fu_677_p2;
wire   [10:0] tmp_770_i_i_fu_681_p3;
wire   [0:0] is_padding_pixel_1_1_i_i_fu_689_p2;
wire   [10:0] tmp_775_i_i_fu_720_p3;
wire   [0:0] is_padding_pixel_1_2_i_i_fu_727_p2;
wire   [10:0] tmp_781_i_i_fu_746_p3;
wire   [0:0] is_padding_pixel_2_i_i_fu_753_p2;
wire   [10:0] tmp_786_i_i_fu_772_p3;
wire   [0:0] is_padding_pixel_2_1_i_i_fu_779_p2;
wire   [10:0] tmp_791_i_i_fu_798_p3;
wire   [0:0] is_padding_pixel_2_2_i_i_fu_805_p2;
reg    grp_fu_239_ce;
reg    grp_fu_386_ce;
reg    grp_fu_402_ce;
reg    grp_fu_438_ce;
reg   [18:0] ap_return_0_preg = 19'b0000000000000000000;
reg   [31:0] ap_return_1_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_2_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_3_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_4_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_5_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_6_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_7_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_8_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_9_preg = 32'b00000000000000000000000000000000;
reg   [8:0] ap_NS_fsm;
reg    ap_sig_pprstidle_pp0;
wire   [15:0] addr_pixel_offset_V_0_1_i_i_fu_378_p00;
wire   [15:0] addr_pixel_offset_V_0_2_i_i_fu_394_p00;
wire   [15:0] addr_pixel_offset_V_0_i_i_fu_267_p10;
wire   [15:0] grp_fu_239_p10;
wire   [15:0] grp_fu_386_p10;
wire   [15:0] grp_fu_402_p10;
wire   [18:0] grp_fu_438_p00;
wire   [18:0] grp_fu_438_p10;


fpga_top_reg_float_s grp_fpga_top_reg_float_s_fu_212(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .in_r( grp_fpga_top_reg_float_s_fu_212_in_r ),
    .ap_return( grp_fpga_top_reg_float_s_fu_212_ap_return ),
    .ap_ce( grp_fpga_top_reg_float_s_fu_212_ap_ce )
);

fpga_top_mul_16s_2ns_16_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
fpga_top_mul_16s_2ns_16_3_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( line_width ),
    .din1( grp_fu_239_p1 ),
    .ce( grp_fu_239_ce ),
    .dout( grp_fu_239_p2 )
);

fpga_top_mul_16s_2ns_16_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
fpga_top_mul_16s_2ns_16_3_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( line_width_load_reg_881 ),
    .din1( grp_fu_386_p1 ),
    .ce( grp_fu_386_ce ),
    .dout( grp_fu_386_p2 )
);

fpga_top_mul_16s_2ns_16_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
fpga_top_mul_16s_2ns_16_3_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( line_width_load_reg_881 ),
    .din1( grp_fu_402_p1 ),
    .ce( grp_fu_402_ce ),
    .dout( grp_fu_402_p2 )
);

fpga_top_mul_10ns_10ns_19_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 19 ))
fpga_top_mul_10ns_10ns_19_3_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_438_p0 ),
    .din1( grp_fu_438_p1 ),
    .ce( grp_fu_438_ce ),
    .dout( grp_fu_438_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0_preg
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0_preg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_89))) begin
            ap_reg_ppiten_pp0_it0_preg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_8)) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_0_preg
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= ap_const_lv19_0;
    end else begin
        if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
            ap_return_0_preg <= ci_times_ch_out_V_reg_1082;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_1_preg
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= ap_const_lv32_0;
    end else begin
        if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
            ap_return_1_preg <= buffer_0_write_assign_reg_1055;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_2_preg
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= ap_const_lv32_0;
    end else begin
        if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
            ap_return_2_preg <= buffer_1_write_assign_reg_1087;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_3_preg
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= ap_const_lv32_0;
    end else begin
        if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
            ap_return_3_preg <= buffer_2_write_assign_reg_1097;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_4_preg
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= ap_const_lv32_0;
    end else begin
        if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
            ap_return_4_preg <= buffer_3_write_assign_reg_1144;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_5_preg
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= ap_const_lv32_0;
    end else begin
        if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
            ap_return_5_preg <= buffer_4_write_assign_reg_1169;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_6_preg
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= ap_const_lv32_0;
    end else begin
        if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
            ap_return_6_preg <= buffer_5_write_assign_reg_1179;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_7_preg
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= ap_const_lv32_0;
    end else begin
        if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
            ap_return_7_preg <= buffer_6_write_assign_reg_1189;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_8_preg
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= ap_const_lv32_0;
    end else begin
        if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
            ap_return_8_preg <= buffer_7_write_assign_reg_1199;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_9_preg
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= ap_const_lv32_0;
    end else begin
        if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
            ap_return_9_preg <= grp_fpga_top_reg_float_s_fu_212_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_7)) begin
        addr_V_1_2_i_i_reg_1113 <= addr_V_1_2_i_i_fu_646_p2;
        addr_V_2_1_i_i_reg_1134 <= addr_V_2_1_i_i_fu_669_p2;
        addr_V_2_2_i_i_reg_1139 <= addr_V_2_2_i_i_fu_673_p2;
        addr_V_2_i_i_reg_1118 <= addr_V_2_i_i_fu_650_p2;
        rev4_reg_1102 <= rev4_fu_599_p2;
        rev5_reg_1123 <= rev5_fu_654_p2;
        tmp_780_i_i_reg_1129 <= tmp_780_i_i_fu_664_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_162))) begin
        addr_line_offset_V_0_1_i_i_reg_1009 <= grp_fu_386_p2;
        tmp_183_0_i_i_reg_992[9 : 0] <= tmp_183_0_i_i_fu_407_p1[9 : 0];
        tmp_184_0_i_i_reg_998 <= tmp_184_0_i_i_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2)) begin
        addr_line_offset_V_0_i_i_reg_975 <= grp_fu_239_p2;
        addr_pixel_offset_V_0_2_i_i_reg_980 <= addr_pixel_offset_V_0_2_i_i_fu_394_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) begin
        addr_pixel_offset_V_0_1_i_i_reg_963 <= addr_pixel_offset_V_0_1_i_i_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_89))) begin
        addr_pixel_offset_V_0_i_i_reg_894 <= addr_pixel_offset_V_0_i_i_fu_267_p2;
        line_width_load_reg_881 <= line_width;
        slt1_reg_906 <= slt1_fu_295_p2;
        slt_reg_901 <= slt_fu_281_p2;
        tmp_182_0_i_i_reg_888[9 : 0] <= tmp_182_0_i_i_fu_263_p1[9 : 0];
        tmp_2_reg_911 <= p_lobit_i_i2_0_i_i_fu_301_p2[ap_const_lv32_9];
        tmp_3_reg_921 <= y_V_i_i_fu_221_p2[ap_const_lv32_9];
        tmp_6_reg_937 <= tmp_6_fu_341_p1;
        tmp_7_reg_947 <= x_V_0_i_i_fu_249_p2[ap_const_lv32_9];
        tmp_9_reg_953 <= tmp_9_fu_365_p1;
        ult1_reg_932 <= ult1_fu_335_p2;
        ult2_reg_942 <= ult2_fu_345_p2;
        ult3_reg_958 <= ult3_fu_369_p2;
        ult_reg_916 <= ult_fu_315_p2;
        x_V_0_2_i_i_reg_927 <= x_V_0_2_i_i_fu_329_p2;
        x_V_3_read_reg_871 <= x_V_3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5) & ~(ap_done_reg == ap_const_logic_1))) begin
        buffer_0_write_assign_reg_1055 <= grp_fpga_top_reg_float_s_fu_212_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_6))) begin
        buffer_1_write_assign_reg_1087 <= grp_fpga_top_reg_float_s_fu_212_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_7))) begin
        buffer_2_write_assign_reg_1097 <= grp_fpga_top_reg_float_s_fu_212_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_8) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        buffer_3_write_assign_reg_1144 <= grp_fpga_top_reg_float_s_fu_212_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_89))) begin
        buffer_4_write_assign_reg_1169 <= grp_fpga_top_reg_float_s_fu_212_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1))) begin
        buffer_5_write_assign_reg_1179 <= grp_fpga_top_reg_float_s_fu_212_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2))) begin
        buffer_6_write_assign_reg_1189 <= grp_fpga_top_reg_float_s_fu_212_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_162))) begin
        buffer_7_write_assign_reg_1199 <= grp_fpga_top_reg_float_s_fu_212_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5) & ~(ap_done_reg == ap_const_logic_1))) begin
        ci_times_ch_out_V_reg_1082 <= grp_fu_438_p2;
        rev2_reg_1060 <= rev2_fu_506_p2;
        rev3_reg_1066 <= rev3_fu_548_p2;
        tmp_758_i_i_reg_1072 <= tmp_758_i_i_fu_558_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4)) begin
        rev1_reg_1030 <= rev1_fu_449_p2;
        rev_reg_1024 <= rev_fu_444_p2;
        tmp_184_1_i_i_reg_1041 <= tmp_184_1_i_i_fu_497_p2;
        tmp_184_2_i_i_reg_1048 <= tmp_184_2_i_i_fu_501_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_8)) begin
        tmp_774_i_i_reg_1149 <= tmp_774_i_i_fu_704_p2;
        tmp_785_i_i_reg_1159 <= tmp_785_i_i_fu_712_p2;
        tmp_790_i_i_reg_1164 <= tmp_790_i_i_fu_716_p2;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg8_fsm_8 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or ap_sig_cseq_ST_pp0_stg5_fsm_5 or ap_sig_cseq_ST_pp0_stg6_fsm_6 or ap_sig_cseq_ST_pp0_stg7_fsm_7 or tmp_198_0_i_i_fu_421_p1 or tmp_198_0_1_i_i_fu_492_p1 or tmp_198_0_2_i_i_fu_563_p1 or tmp_198_1_i_i_fu_594_p1 or tmp_198_1_1_i_i_fu_641_p1 or tmp_198_1_2_i_i_fu_708_p1 or tmp_198_2_i_i_fu_742_p1 or tmp_198_2_1_i_i_fu_768_p1 or tmp_198_2_2_i_i_fu_794_p1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2))) begin
        ImageCache_IBRAM_address0 = tmp_198_2_2_i_i_fu_794_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1))) begin
        ImageCache_IBRAM_address0 = tmp_198_2_1_i_i_fu_768_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        ImageCache_IBRAM_address0 = tmp_198_2_i_i_fu_742_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_8) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        ImageCache_IBRAM_address0 = tmp_198_1_2_i_i_fu_708_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_7))) begin
        ImageCache_IBRAM_address0 = tmp_198_1_1_i_i_fu_641_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_6))) begin
        ImageCache_IBRAM_address0 = tmp_198_1_i_i_fu_594_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5))) begin
        ImageCache_IBRAM_address0 = tmp_198_0_2_i_i_fu_563_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        ImageCache_IBRAM_address0 = tmp_198_0_1_i_i_fu_492_p1;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3))) begin
        ImageCache_IBRAM_address0 = tmp_198_0_i_i_fu_421_p1;
    end else begin
        ImageCache_IBRAM_address0 = 'bx;
    end
end

always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg8_fsm_8 or ap_sig_bdd_89 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_bdd_162 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or ap_sig_cseq_ST_pp0_stg5_fsm_5 or ap_sig_cseq_ST_pp0_stg6_fsm_6 or ap_sig_cseq_ST_pp0_stg7_fsm_7) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_8) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5) & ~(ap_done_reg == ap_const_logic_1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_6)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_7)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_89)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_162)))) begin
        ImageCache_IBRAM_ce0 = ap_const_logic_1;
    end else begin
        ImageCache_IBRAM_ce0 = ap_const_logic_0;
    end
end

always @ (ap_done_reg or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_4) begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_reg_ppiten_pp0_it1))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg8_fsm_8) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_8) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0_preg) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
        ap_reg_ppiten_pp0_it0 = ap_start;
    end else begin
        ap_reg_ppiten_pp0_it0 = ap_reg_ppiten_pp0_it0_preg;
    end
end

always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or ci_times_ch_out_V_reg_1082 or ap_return_0_preg) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        ap_return_0 = ci_times_ch_out_V_reg_1082;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or buffer_0_write_assign_reg_1055 or ap_return_1_preg) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        ap_return_1 = buffer_0_write_assign_reg_1055;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or buffer_1_write_assign_reg_1087 or ap_return_2_preg) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        ap_return_2 = buffer_1_write_assign_reg_1087;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or buffer_2_write_assign_reg_1097 or ap_return_3_preg) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        ap_return_3 = buffer_2_write_assign_reg_1097;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or buffer_3_write_assign_reg_1144 or ap_return_4_preg) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        ap_return_4 = buffer_3_write_assign_reg_1144;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or buffer_4_write_assign_reg_1169 or ap_return_5_preg) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        ap_return_5 = buffer_4_write_assign_reg_1169;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or buffer_5_write_assign_reg_1179 or ap_return_6_preg) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        ap_return_6 = buffer_5_write_assign_reg_1179;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or buffer_6_write_assign_reg_1189 or ap_return_7_preg) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        ap_return_7 = buffer_6_write_assign_reg_1189;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or buffer_7_write_assign_reg_1199 or ap_return_8_preg) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        ap_return_8 = buffer_7_write_assign_reg_1199;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or grp_fpga_top_reg_float_s_fu_212_ap_return or ap_return_9_preg) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        ap_return_9 = grp_fpga_top_reg_float_s_fu_212_ap_return;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (ap_sig_bdd_28) begin
    if (ap_sig_bdd_28) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_133) begin
    if (ap_sig_bdd_133) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_144) begin
    if (ap_sig_bdd_144) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_157) begin
    if (ap_sig_bdd_157) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_183) begin
    if (ap_sig_bdd_183) begin
        ap_sig_cseq_ST_pp0_stg4_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg4_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_200) begin
    if (ap_sig_bdd_200) begin
        ap_sig_cseq_ST_pp0_stg5_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg5_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_222) begin
    if (ap_sig_bdd_222) begin
        ap_sig_cseq_ST_pp0_stg6_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg6_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_233) begin
    if (ap_sig_bdd_233) begin
        ap_sig_cseq_ST_pp0_stg7_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg7_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_46) begin
    if (ap_sig_bdd_46) begin
        ap_sig_cseq_ST_pp0_stg8_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg8_fsm_8 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_reg_ppiten_pp0_it0) begin
    if (((ap_const_logic_0 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_0 == ap_start))) begin
        ap_sig_pprstidle_pp0 = ap_const_logic_1;
    end else begin
        ap_sig_pprstidle_pp0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_bdd_162) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_162))) begin
        ch_out_V_out_write = ap_const_logic_1;
    end else begin
        ch_out_V_out_write = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_bdd_162) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_162))) begin
        ci_V_out_write = ap_const_logic_1;
    end else begin
        ci_V_out_write = ap_const_logic_0;
    end
end

always @ (ap_done_reg or ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_89 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_bdd_162 or ap_sig_cseq_ST_pp0_stg5_fsm_5) begin
    if ((((ap_done_reg == ap_const_logic_1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_89) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & ap_sig_bdd_162))) begin
        grp_fpga_top_reg_float_s_fu_212_ap_ce = ap_const_logic_0;
    end else begin
        grp_fpga_top_reg_float_s_fu_212_ap_ce = ap_const_logic_1;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg8_fsm_8 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or ap_sig_cseq_ST_pp0_stg5_fsm_5 or ap_sig_cseq_ST_pp0_stg6_fsm_6 or ap_sig_cseq_ST_pp0_stg7_fsm_7 or px_0_i_i_fu_479_p3 or px_0_1_i_i_fu_535_p3 or px_0_2_i_i_fu_581_p3 or px_1_i_i_fu_628_p3 or px_1_1_i_i_fu_695_p3 or px_1_2_i_i_fu_733_p3 or px_2_i_i_fu_759_p3 or px_2_1_i_i_fu_785_p3 or px_2_2_i_i_fu_811_p3) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3))) begin
        grp_fpga_top_reg_float_s_fu_212_in_r = px_2_2_i_i_fu_811_p3;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2))) begin
        grp_fpga_top_reg_float_s_fu_212_in_r = px_2_1_i_i_fu_785_p3;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1))) begin
        grp_fpga_top_reg_float_s_fu_212_in_r = px_2_i_i_fu_759_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        grp_fpga_top_reg_float_s_fu_212_in_r = px_1_2_i_i_fu_733_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg8_fsm_8) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        grp_fpga_top_reg_float_s_fu_212_in_r = px_1_1_i_i_fu_695_p3;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_7))) begin
        grp_fpga_top_reg_float_s_fu_212_in_r = px_1_i_i_fu_628_p3;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_6))) begin
        grp_fpga_top_reg_float_s_fu_212_in_r = px_0_2_i_i_fu_581_p3;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5))) begin
        grp_fpga_top_reg_float_s_fu_212_in_r = px_0_1_i_i_fu_535_p3;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        grp_fpga_top_reg_float_s_fu_212_in_r = px_0_i_i_fu_479_p3;
    end else begin
        grp_fpga_top_reg_float_s_fu_212_in_r = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_0 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_89 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_89)) | (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2))) begin
        grp_fu_239_ce = ap_const_logic_1;
    end else begin
        grp_fu_239_ce = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_1 or ap_sig_cseq_ST_pp0_stg2_fsm_2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_bdd_162) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_162)))) begin
        grp_fu_386_ce = ap_const_logic_1;
    end else begin
        grp_fu_386_ce = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_2 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_bdd_162 or ap_sig_cseq_ST_pp0_stg4_fsm_4) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_2) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_162)) | (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4))) begin
        grp_fu_402_ce = ap_const_logic_1;
    end else begin
        grp_fu_402_ce = ap_const_logic_0;
    end
end

always @ (ap_done_reg or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg3_fsm_3 or ap_sig_bdd_162 or ap_sig_cseq_ST_pp0_stg4_fsm_4 or ap_sig_cseq_ST_pp0_stg5_fsm_5) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_3) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_162)) | (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_4) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_5) & ~(ap_done_reg == ap_const_logic_1)))) begin
        grp_fu_438_ce = ap_const_logic_1;
    end else begin
        grp_fu_438_ce = ap_const_logic_0;
    end
end
always @ (ap_start or ap_done_reg or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_89 or ap_sig_bdd_162 or ap_sig_pprstidle_pp0) begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_89) & ~((ap_const_logic_0 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_0 == ap_start)))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            end
        end
        ap_ST_pp0_stg1_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_2;
        end
        ap_ST_pp0_stg2_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_3;
        end
        ap_ST_pp0_stg3_fsm_3 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_162)) begin
                ap_NS_fsm = ap_ST_pp0_stg4_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg3_fsm_3;
            end
        end
        ap_ST_pp0_stg4_fsm_4 : 
        begin
            if (~(ap_const_logic_1 == ap_sig_pprstidle_pp0)) begin
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
            end
        end
        ap_ST_pp0_stg5_fsm_5 : 
        begin
            if (~(ap_done_reg == ap_const_logic_1)) begin
                ap_NS_fsm = ap_ST_pp0_stg6_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_5;
            end
        end
        ap_ST_pp0_stg6_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg7_fsm_7;
        end
        ap_ST_pp0_stg7_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg8_fsm_8;
        end
        ap_ST_pp0_stg8_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign addr_V_0_1_i_i_fu_488_p2 = (addr_pixel_offset_V_0_1_i_i_reg_963 + tmp_184_0_i_i_reg_998);

assign addr_V_0_2_i_i_fu_544_p2 = (addr_pixel_offset_V_0_2_i_i_reg_980 + tmp_184_0_i_i_reg_998);

assign addr_V_0_i_i_fu_416_p2 = (tmp_184_0_i_i_fu_411_p2 + addr_pixel_offset_V_0_i_i_reg_894);

assign addr_V_1_1_i_i_fu_637_p2 = (tmp_184_1_i_i_reg_1041 + addr_pixel_offset_V_0_1_i_i_reg_963);

assign addr_V_1_2_i_i_fu_646_p2 = (tmp_184_1_i_i_reg_1041 + addr_pixel_offset_V_0_2_i_i_reg_980);

assign addr_V_1_i_i_fu_590_p2 = (tmp_184_1_i_i_reg_1041 + addr_pixel_offset_V_0_i_i_reg_894);

assign addr_V_2_1_i_i_fu_669_p2 = (tmp_184_2_i_i_reg_1048 + addr_pixel_offset_V_0_1_i_i_reg_963);

assign addr_V_2_2_i_i_fu_673_p2 = (tmp_184_2_i_i_reg_1048 + addr_pixel_offset_V_0_2_i_i_reg_980);

assign addr_V_2_i_i_fu_650_p2 = (tmp_184_2_i_i_reg_1048 + addr_pixel_offset_V_0_i_i_reg_894);

assign addr_pixel_offset_V_0_1_i_i_fu_378_p0 = addr_pixel_offset_V_0_1_i_i_fu_378_p00;

assign addr_pixel_offset_V_0_1_i_i_fu_378_p00 = x_V_3_read_reg_871;

assign addr_pixel_offset_V_0_1_i_i_fu_378_p1 = tmp_182_0_i_i_reg_888;

assign addr_pixel_offset_V_0_1_i_i_fu_378_p2 = (addr_pixel_offset_V_0_1_i_i_fu_378_p0 * addr_pixel_offset_V_0_1_i_i_fu_378_p1);

assign addr_pixel_offset_V_0_2_i_i_fu_394_p0 = addr_pixel_offset_V_0_2_i_i_fu_394_p00;

assign addr_pixel_offset_V_0_2_i_i_fu_394_p00 = x_V_0_2_i_i_reg_927;

assign addr_pixel_offset_V_0_2_i_i_fu_394_p1 = tmp_182_0_i_i_reg_888;

assign addr_pixel_offset_V_0_2_i_i_fu_394_p2 = (addr_pixel_offset_V_0_2_i_i_fu_394_p0 * addr_pixel_offset_V_0_2_i_i_fu_394_p1);

assign addr_pixel_offset_V_0_i_i_fu_267_p0 = x_V_0_i_i_fu_249_p2;

assign addr_pixel_offset_V_0_i_i_fu_267_p1 = addr_pixel_offset_V_0_i_i_fu_267_p10;

assign addr_pixel_offset_V_0_i_i_fu_267_p10 = ImageCache_ch_in_V;

assign addr_pixel_offset_V_0_i_i_fu_267_p2 = ($signed(addr_pixel_offset_V_0_i_i_fu_267_p0) * $signed({{1'b0}, {addr_pixel_offset_V_0_i_i_fu_267_p1}}));


always @ (ap_CS_fsm) begin
    ap_sig_bdd_133 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_144 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_157 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ci_V_out_full_n or ch_out_V_out_full_n) begin
    ap_sig_bdd_162 = ((ci_V_out_full_n == ap_const_logic_0) | (ch_out_V_out_full_n == ap_const_logic_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_183 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_200 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_222 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_233 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_28 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_46 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_start or ap_done_reg) begin
    ap_sig_bdd_89 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

assign ch_out_V_out_din = ch_out_V;

assign ci_V_out_din = ci_V;

assign grp_fu_239_p1 = grp_fu_239_p10;

assign grp_fu_239_p10 = tmp_1_fu_227_p1;

assign grp_fu_386_p1 = grp_fu_386_p10;

assign grp_fu_386_p10 = tmp_6_reg_937;

assign grp_fu_402_p1 = grp_fu_402_p10;

assign grp_fu_402_p10 = tmp_9_reg_953;

assign grp_fu_438_p0 = grp_fu_438_p00;

assign grp_fu_438_p00 = WeightsCache_ch_out_V;

assign grp_fu_438_p1 = grp_fu_438_p10;

assign grp_fu_438_p10 = ci_V;

assign is_padding_pixel_0_1_i_i_fu_529_p2 = (tmp_754_i_i_fu_521_p3 == ap_const_lv11_0? 1'b1: 1'b0);

assign is_padding_pixel_0_2_i_i_fu_575_p2 = (tmp_759_i_i_fu_568_p3 == ap_const_lv11_0? 1'b1: 1'b0);

assign is_padding_pixel_0_i_i_fu_473_p2 = (tmp_749_i_i_fu_465_p3 == ap_const_lv11_0? 1'b1: 1'b0);

assign is_padding_pixel_1_1_i_i_fu_689_p2 = (tmp_770_i_i_fu_681_p3 == ap_const_lv11_0? 1'b1: 1'b0);

assign is_padding_pixel_1_2_i_i_fu_727_p2 = (tmp_775_i_i_fu_720_p3 == ap_const_lv11_0? 1'b1: 1'b0);

assign is_padding_pixel_1_i_i_fu_622_p2 = (tmp_765_i_i_fu_614_p3 == ap_const_lv11_0? 1'b1: 1'b0);

assign is_padding_pixel_2_1_i_i_fu_779_p2 = (tmp_786_i_i_fu_772_p3 == ap_const_lv11_0? 1'b1: 1'b0);

assign is_padding_pixel_2_2_i_i_fu_805_p2 = (tmp_791_i_i_fu_798_p3 == ap_const_lv11_0? 1'b1: 1'b0);

assign is_padding_pixel_2_i_i_fu_753_p2 = (tmp_781_i_i_fu_746_p3 == ap_const_lv11_0? 1'b1: 1'b0);

assign p_lobit_i_i2_0_i_i_fu_301_p2 = (x_V_0_i_i_fu_249_p2 | y_V_i_i_fu_221_p2);

assign px_0_1_i_i_fu_535_p3 = ((is_padding_pixel_0_1_i_i_fu_529_p2[0:0] === 1'b1) ? ImageCache_IBRAM_q0 : ap_const_lv32_0);

assign px_0_2_i_i_fu_581_p3 = ((is_padding_pixel_0_2_i_i_fu_575_p2[0:0] === 1'b1) ? ImageCache_IBRAM_q0 : ap_const_lv32_0);

assign px_0_i_i_fu_479_p3 = ((is_padding_pixel_0_i_i_fu_473_p2[0:0] === 1'b1) ? ImageCache_IBRAM_q0 : ap_const_lv32_0);

assign px_1_1_i_i_fu_695_p3 = ((is_padding_pixel_1_1_i_i_fu_689_p2[0:0] === 1'b1) ? ImageCache_IBRAM_q0 : ap_const_lv32_0);

assign px_1_2_i_i_fu_733_p3 = ((is_padding_pixel_1_2_i_i_fu_727_p2[0:0] === 1'b1) ? ImageCache_IBRAM_q0 : ap_const_lv32_0);

assign px_1_i_i_fu_628_p3 = ((is_padding_pixel_1_i_i_fu_622_p2[0:0] === 1'b1) ? ImageCache_IBRAM_q0 : ap_const_lv32_0);

assign px_2_1_i_i_fu_785_p3 = ((is_padding_pixel_2_1_i_i_fu_779_p2[0:0] === 1'b1) ? ImageCache_IBRAM_q0 : ap_const_lv32_0);

assign px_2_2_i_i_fu_811_p3 = ((is_padding_pixel_2_2_i_i_fu_805_p2[0:0] === 1'b1) ? ImageCache_IBRAM_q0 : ap_const_lv32_0);

assign px_2_i_i_fu_759_p3 = ((is_padding_pixel_2_i_i_fu_753_p2[0:0] === 1'b1) ? ImageCache_IBRAM_q0 : ap_const_lv32_0);

assign rev1_fu_449_p2 = (slt1_reg_906 ^ ap_const_lv1_1);

assign rev2_fu_506_p2 = (ult_reg_916 ^ ap_const_lv1_1);

assign rev3_fu_548_p2 = (ult1_reg_932 ^ ap_const_lv1_1);

assign rev4_fu_599_p2 = (ult2_reg_942 ^ ap_const_lv1_1);

assign rev5_fu_654_p2 = (ult3_reg_958 ^ ap_const_lv1_1);

assign rev_fu_444_p2 = (slt_reg_901 ^ ap_const_lv1_1);

assign slt1_fu_295_p2 = ($signed(y_V_i_i_fu_221_p2) < $signed(tmp_192_0_cast_i_i_cast_fu_291_p1)? 1'b1: 1'b0);

assign slt_fu_281_p2 = ($signed(x_V_0_i_i_fu_249_p2) < $signed(tmp_187_0_cast_i_i_cast_fu_277_p1)? 1'b1: 1'b0);

assign tmp10_fu_659_p2 = (rev_reg_1024 | rev5_fu_654_p2);

assign tmp4_fu_511_p2 = (rev2_fu_506_p2 | rev1_reg_1030);

assign tmp5_fu_553_p2 = (rev3_fu_548_p2 | rev1_reg_1030);

assign tmp8_fu_604_p2 = (rev_reg_1024 | rev4_fu_599_p2);

assign tmp_182_0_i_i_fu_263_p1 = ImageCache_ch_in_V;

assign tmp_183_0_i_i_fu_407_p1 = ci_V;

assign tmp_184_0_i_i_fu_411_p2 = (addr_line_offset_V_0_i_i_reg_975 + tmp_183_0_i_i_fu_407_p1);

assign tmp_184_1_i_i_fu_497_p2 = (addr_line_offset_V_0_1_i_i_reg_1009 + tmp_183_0_i_i_reg_992);

assign tmp_184_2_i_i_fu_501_p2 = (grp_fu_402_p2 + tmp_183_0_i_i_reg_992);

assign tmp_187_0_cast_i_i_cast_fu_277_p1 = ImageCache_width_in_V;

assign tmp_192_0_cast_i_i_cast_fu_291_p1 = ImageCache_height_in_V;

assign tmp_198_0_1_i_i_fu_492_p1 = addr_V_0_1_i_i_fu_488_p2;

assign tmp_198_0_2_i_i_fu_563_p1 = addr_V_0_2_i_i_fu_544_p2;

assign tmp_198_0_i_i_fu_421_p1 = addr_V_0_i_i_fu_416_p2;

assign tmp_198_1_1_i_i_fu_641_p1 = addr_V_1_1_i_i_fu_637_p2;

assign tmp_198_1_2_i_i_fu_708_p1 = addr_V_1_2_i_i_reg_1113;

assign tmp_198_1_i_i_fu_594_p1 = addr_V_1_i_i_fu_590_p2;

assign tmp_198_2_1_i_i_fu_768_p1 = addr_V_2_1_i_i_reg_1134;

assign tmp_198_2_2_i_i_fu_794_p1 = addr_V_2_2_i_i_reg_1139;

assign tmp_198_2_i_i_fu_742_p1 = addr_V_2_i_i_reg_1118;

assign tmp_1_fu_227_p1 = y_V_i_i_fu_221_p2[1:0];

assign tmp_6_fu_341_p1 = y_V_2[1:0];

assign tmp_748_i_i_fu_460_p2 = (tmp_fu_454_p2 | tmp_2_reg_911);

assign tmp_749_i_i_fu_465_p3 = {{ap_const_lv10_0}, {tmp_748_i_i_fu_460_p2}};

assign tmp_753_i_i_fu_516_p2 = (tmp4_fu_511_p2 | tmp_3_reg_921);

assign tmp_754_i_i_fu_521_p3 = {{ap_const_lv10_0}, {tmp_753_i_i_fu_516_p2}};

assign tmp_758_i_i_fu_558_p2 = (tmp5_fu_553_p2 | tmp_3_reg_921);

assign tmp_759_i_i_fu_568_p3 = {{ap_const_lv10_0}, {tmp_758_i_i_reg_1072}};

assign tmp_764_i_i_fu_609_p2 = (tmp8_fu_604_p2 | tmp_7_reg_947);

assign tmp_765_i_i_fu_614_p3 = {{ap_const_lv10_0}, {tmp_764_i_i_fu_609_p2}};

assign tmp_769_i_i_fu_677_p2 = (rev2_reg_1060 | rev4_reg_1102);

assign tmp_770_i_i_fu_681_p3 = {{ap_const_lv10_0}, {tmp_769_i_i_fu_677_p2}};

assign tmp_774_i_i_fu_704_p2 = (rev3_reg_1066 | rev4_reg_1102);

assign tmp_775_i_i_fu_720_p3 = {{ap_const_lv10_0}, {tmp_774_i_i_reg_1149}};

assign tmp_780_i_i_fu_664_p2 = (tmp10_fu_659_p2 | tmp_7_reg_947);

assign tmp_781_i_i_fu_746_p3 = {{ap_const_lv10_0}, {tmp_780_i_i_reg_1129}};

assign tmp_785_i_i_fu_712_p2 = (rev2_reg_1060 | rev5_reg_1123);

assign tmp_786_i_i_fu_772_p3 = {{ap_const_lv10_0}, {tmp_785_i_i_reg_1159}};

assign tmp_790_i_i_fu_716_p2 = (rev3_reg_1066 | rev5_reg_1123);

assign tmp_791_i_i_fu_798_p3 = {{ap_const_lv10_0}, {tmp_790_i_i_reg_1164}};

assign tmp_9_fu_365_p1 = y_V_i_i_43_fu_359_p2[1:0];

assign tmp_fu_454_p2 = (rev_fu_444_p2 | rev1_fu_449_p2);

assign ult1_fu_335_p2 = (x_V_0_2_i_i_fu_329_p2 < tmp_187_0_cast_i_i_cast_fu_277_p1? 1'b1: 1'b0);

assign ult2_fu_345_p2 = (y_V_2 < ImageCache_height_in_V? 1'b1: 1'b0);

assign ult3_fu_369_p2 = (y_V_i_i_43_fu_359_p2 < tmp_192_0_cast_i_i_cast_fu_291_p1? 1'b1: 1'b0);

assign ult_fu_315_p2 = (x_V_3 < ImageCache_width_in_V? 1'b1: 1'b0);

assign x_V_0_2_i_i_fu_329_p2 = (ap_const_lv10_1 + x_V_3_cast_fu_245_p1);

assign x_V_0_i_i_fu_249_p2 = ($signed(ap_const_lv10_3FF) + $signed(x_V_3_cast_fu_245_p1));

assign x_V_3_cast_fu_245_p1 = x_V_3;

assign y_V_2_cast1_fu_217_p1 = y_V_2;

assign y_V_i_i_43_fu_359_p2 = (ap_const_lv10_1 + y_V_2_cast1_fu_217_p1);

assign y_V_i_i_fu_221_p2 = ($signed(ap_const_lv10_3FF) + $signed(y_V_2_cast1_fu_217_p1));
always @ (posedge ap_clk) begin
    tmp_182_0_i_i_reg_888[15:10] <= 6'b000000;
    tmp_183_0_i_i_reg_992[15:10] <= 6'b000000;
end



endmodule //fpga_top_preloadPixelsAndPrecalcCIoffse

